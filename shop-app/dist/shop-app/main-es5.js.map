{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/services/auth-guard.service.ts","webpack:///src/app/auth/services/auth.service.ts","webpack:///src/app/auth/views/login/login.component.ts","webpack:///src/app/auth/views/login/login.component.html","webpack:///src/app/auth/views/register/register.component.ts","webpack:///src/app/auth/views/register/register.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/nav/nav.component.ts","webpack:///src/app/components/nav/nav.component.html","webpack:///src/app/material.module.ts","webpack:///src/app/not-found/not-found.component.ts","webpack:///src/app/not-found/not-found.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","webpackAsyncContextKeys","Object","module","exports","routes","path","pathMatch","redirectTo","loadChildren","canActivate","component","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","declarations","providers","bootstrap","AuthRoutingModule","forChild","AuthModule","AuthGuardService","authService","router","route","state","authenticated","pipe","b","navigateByUrl","providedIn","AuthService","afs","afAuth","userCollection","collection","user","auth","createUserWithEmailAndPassword","email","password","u","doc","uid","set","err","signInWithEmailAndPassword","valueChanges","signOut","authState","newUser","firstname","displayName","lastname","address","city","phone","mobilephone","provider","GoogleAuthProvider","signInWithPopup","credentials","updateUserData","loginWithGoogleAccount","data","console","log","LoginComponent","fb","snackBar","loginForm","group","required","minLength","loading","open","duration","value","login","subscribe","loginOkNotification","loginErrorNotification","loginGoogle","onSubmit","RegisterComponent","formRegister","validator","matchingPasswords","states","password1","controls","password2","matching","register","FooterComponent","NavComponent","title","user$","getUser","authenticated$","logout","MaterialModule","NotFoundComponent","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["var map = {\n\t\"./main/main.module\": [\n\t\t\"./src/app/main/main.module.ts\",\n\t\t\"main-main-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { AuthGuardService } from './auth/services/auth-guard.service';\n\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', redirectTo: '/main/home'},\n  {path: 'main', loadChildren: './main/main.module#MainModule', canActivate: [AuthGuardService]},\n  {path: '**', component: NotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { User } from './auth/models/user';\nimport { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n}\n","<app-nav></app-nav>\n\n<router-outlet></router-outlet>\n\n","import { environment } from './../environments/environment';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { NotFoundComponent } from './not-found/not-found.component'\nimport { AuthModule } from './auth/auth.module';\nimport { MainModule } from './main/main.module';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { NavComponent } from './components/nav/nav.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotFoundComponent,\n    FooterComponent,\n    NavComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    // MainModule,\n    AuthModule,\n    AppRoutingModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './views/login/login.component';\nimport { RegisterComponent } from './views/register/register.component';\n\n\nconst routes: Routes = [\n  {path: 'auth/login', component: LoginComponent},\n  {path: 'auth/register', component: RegisterComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './views/login/login.component';\nimport { RegisterComponent } from './views/register/register.component';\nimport { MaterialModule } from '../material.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    MaterialModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class AuthModule { }\n","import { AuthService } from './auth.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.authService.authenticated()\n      .pipe(tap(b => {\n        if(!b)\n          this.router.navigateByUrl('/auth/login');\n      }))\n      \n  }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { from, Observable, throwError, of } from 'rxjs';\nimport { switchMap, catchError, map, tap } from 'rxjs/operators';\nimport { auth } from 'firebase/app';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private userCollection: AngularFirestoreCollection<User> = this.afs.collection('users');\n\n  constructor(\n    private afs: AngularFirestore,\n    private afAuth: AngularFireAuth\n  ) { }\n\n  register(user: User): Observable<boolean> {\n    return from(this.afAuth.auth\n      .createUserWithEmailAndPassword(user.email, user.password))\n      .pipe(\n        switchMap((u: firebase.auth.UserCredential) =>\n          this.userCollection.doc(u.user.uid)\n            .set({ ...user, id: u.user.uid })\n            .then(() => true)\n        ),\n        catchError((err) => throwError(err))\n      )\n  }\n\n  login(email: string, password: string): Observable<User> {\n    return from(this.afAuth.auth.signInWithEmailAndPassword(email, password))\n      .pipe(\n        switchMap((u: firebase.auth.UserCredential) => this.userCollection.doc<User>(u.user.uid).valueChanges()),\n        catchError(() => throwError('Invalid credentials or user not registered.'))\n      )\n  }\n\n  logout() {\n    this.afAuth.auth.signOut();\n  }\n\n  getUser(): Observable<User> {\n    return this.afAuth.authState\n      .pipe(\n        switchMap(u => (u) ?\n          this.userCollection.doc<User>(u.uid).valueChanges() : of(null))\n      )\n  }\n\n  authenticated(): Observable<boolean> {\n    return this.afAuth.authState\n      .pipe(\n        map(u => (u) ? true : false)\n      )\n  }\n\n  async updateUserData(u: auth.UserCredential) {\n    try {\n      const newUser: User = {\n        firstname: u.user.displayName, lastname: '',\n        address: '', city: '', state: '',\n        phone: '', mobilephone: '',\n        email: u.user.email,\n        password: '', id: u.user.uid\n      };\n      await this.userCollection.doc(u.user.uid).set(newUser);\n      return newUser;\n    } catch (e) {\n      throw new Error(e);\n    }\n  }\n\n  async loginWithGoogleAccount() {\n    try {\n      const provider = new auth.GoogleAuthProvider();\n      let credentials: auth.UserCredential = await this.afAuth.auth.signInWithPopup(provider);\n      let user: User = await this.updateUserData(credentials);\n      return user;\n    }\n    catch (e) {\n      throw new Error(e);\n    }\n  }\n\n  loginGoogle(): Observable<User> {\n    return from(this.loginWithGoogleAccount());\n  }\n\n  oldLoginGoogle(): Observable<User> {\n    const provider = new auth.GoogleAuthProvider();\n    return from(this.afAuth.auth.signInWithPopup(provider))\n      .pipe(\n        tap((data) => console.log(data)),\n        switchMap((u: auth.UserCredential) => {\n          const newUser: User = {\n            firstname: u.user.displayName, lastname: '',\n            address: '', city: '', state: '',\n            phone: '', mobilephone: '',\n            email: u.user.email,\n            password: '', id: u.user.uid\n          };\n          return this.userCollection.doc(u.user.uid)\n            .set(newUser).then(() => newUser);\n        })\n      );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { User } from '../../models/user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup = this.fb.group({\n    'email': ['', [Validators.required, Validators.email]],\n    'password': ['', [Validators.required, Validators.minLength(6)]],\n  });\n\n  loading: boolean = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  private loginOkNotification(u: User) {\n    this.snackBar.open(\n      'Logged in successfully. Welcome ' + u.firstname + '!', 'OK', {duration: 2000})\n  }\n\n  private loginErrorNotification(err) {\n    this.snackBar.open(err, 'OK', {duration: 2000})\n  }\n\n  onSubmit(){\n    this.loading = true;\n    let email = this.loginForm.value.email; \n     let password =  this.loginForm.value.password\n    this.authService.login(email, password)\n      .subscribe(\n        (u) => {\n          this.loginOkNotification(u);\n          this.router.navigateByUrl('/');\n          this.loading = false;\n        },\n        (err) => {\n          this.loginErrorNotification(err);\n          this.loading = false;\n        }\n      );\n  }\n\n  loginGoogle(){\n    this.loading = true;\n    this.authService.loginGoogle()\n      .subscribe(\n        (u) => {\n          this.loginOkNotification(u);\n          this.router.navigateByUrl('/');\n          this.loading = false;\n        },\n        (err) => {\n          this.loginErrorNotification(err);\n          this.loading = false;\n        }\n      );\n  }\n\n\n}\n","<div fxLayout=\"column\" >\n    <div fxLayoutAlign=\"center\" fxLayout=\"row\">\n      <form  [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" >\n  \n        <mat-card class=\"login-card mat-elevation-z8\" >\n            <mat-card-title>Login</mat-card-title>\n            <mat-card-content fxLayout=\"column\" *ngIf=\"!loading\">\n              <mat-form-field >\n                <input matInput formControlName=\"email\" type=\"email\"\n                    placeholder=\"E-mail\" autocomplete=\"email\" readonly=\"false\">\n              </mat-form-field>\n              <mat-form-field>\n                <input matInput formControlName=\"password\" type=\"password\"  \n                  placeholder=\"Password\" autocomplete=\"password\">\n              </mat-form-field>\n            </mat-card-content>\n            <mat-card-actions >\n              <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                <button mat-button color=\"warn\" (click)=\"loginGoogle()\"  type=\"button\" [disabled]=\"loading\" >Google Login</button>\n                <button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!loginForm.valid || loading\"><mat-icon>check</mat-icon>Login</button>\n                <!--button mat-button color=\"accent\" routerLink=\"/auth/forgot\"><mat-icon>lock_open</mat-icon><u> ESQUECI A SENHA</u></button-->\n              </div>\n            </mat-card-actions>\n          <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n  \n        </mat-card>\n      </form>\n  \n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { User } from '../../models/user';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  formRegister: FormGroup = this.fb.group({\n    'firstname': ['', [Validators.required]],\n    'lastname': ['', [Validators.required]],\n    'address': ['',[]],\n    'city': ['',[]],\n    'state': ['', []],\n    'phone': ['', []],\n    'mobilephone': ['', []],\n    'email': ['', [Validators.required, Validators.email]],\n    'password1': ['', [Validators.required, Validators.minLength(6)]],\n    'password2': ['', [Validators.required, Validators.minLength(6)]],\n  }, \n  {validator: this.matchingPasswords});\n\n  states = ['MG', 'RS', 'SC', 'SP', 'RJ'];\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  matchingPasswords(group: FormGroup){\n    if(group){\n      const password1 = group.controls['password1'].value;\n      const password2 = group.controls['password2'].value;\n      if(password1 == password2){\n        return null;\n      }\n    }\n    return {matching: false};\n  }\n\n  onSubmit(){\n    const newUser: User = {\n      firstname: this.formRegister.value.firstname,\n      lastname: this.formRegister.value.lastname,\n      address: this.formRegister.value.address,\n      city: this.formRegister.value.city,\n      state: this.formRegister.value.state,\n      phone: this.formRegister.value.phone,\n      mobilephone: this.formRegister.value.mobilephone,\n      email: this.formRegister.value.email,\n      password: this.formRegister.value.password1\n    };\n    this.authService.register(newUser)\n      .subscribe(\n        (u)=>{\n          this.snackBar.open(\n            'Successfully registered. Use your new credentials to sign in.', 'ok',\n            {duration: 2000}\n          );\n          this.router.navigateByUrl('/auth/login');\n        },\n        (err)=> {\n          console.log(err);\n          this.snackBar.open('Error You are not regitered', 'ok', {duration: 2000});\n        }\n      );\n  }\n}\n","<div  fxLayout=\"row\" fxLayoutAlign=\"space-around center\" >\n    <div align=\"center\" fxLayout=\"row\" fxLayoutAlign=\"center center\"  >\n  \n      <form role=\"form\" [formGroup]=\"formRegister\" (ngSubmit)=\"onSubmit()\">\n  \n      <mat-card class=\"register-form mat-elevation-z8\" flex=\"80\">\n  \n        <mat-card-title>Sign up</mat-card-title>\n  \n        <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                      \n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\">\n            <mat-form-field fxFlex=\"45\">\n              <input matInput type=\"text\" formControlName=\"firstname\" \n                autocomplete=\"firstname\" placeholder=\"Nome\">\n            </mat-form-field>               \n            <mat-form-field fxFlex=\"45\">\n              <input matInput type=\"text\" formControlName=\"lastname\" \n                autocomplete=\"lastname\" placeholder=\"Sobre Nome\" >\n            </mat-form-field>               \n          </div>\n  \n          <mat-form-field>\n            <input matInput type=\"text\" formControlName=\"address\" \n                  autocomplete=\"address\" placeholder=\"Endereço Completo\" >\n          </mat-form-field>\n  \n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\">\n            <mat-form-field fxFlex=\"75\"> \n              <input matInput type=\"text\" formControlName=\"city\" \n                autocomplete=\"citt\" placeholder=\"Cidade\">\n            </mat-form-field>\n          \n            <mat-form-field  fxFlex=\"15\">\n              <mat-select matNativeControl placeholder=\"Estado\" formControlName=\"state\">\n                <mat-option *ngFor=\"let state of states\" [value]=\"state\">\n                  {{state}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>          \n            \n          </div>          \n  \n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\">\n            <mat-form-field fxFlex=\"45\"> \n              <input matInput type=\"text\" formControlName=\"phone\" \n                autocomplete=\"Phone\" placeholder=\"Phone\"  >\n            </mat-form-field>\n            <mat-form-field fxFlex=\"45\">               \n              <input matInput type=\"text\" formControlName=\"mobilephone\" \n                autocomplete=\"mobilephone\" placeholder=\"Mobile Phone\"  >\n            </mat-form-field>\n          </div>  \n  \n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\">\n            <mat-form-field fxFlex=\"100\">\n              <input matInput type=\"email\" formControlName=\"email\" \n                class=\"form-control\" value=\"\" autocomplete=\"email\" placeholder=\"E-mail\" >\n            </mat-form-field>  \n          </div>\n  \n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\">\n  \n            <mat-form-field  fxFlex=\"45\">\n              <input matInput type=\"password\" formControlName=\"password1\" \n                type=\"password\" autocomplete=\"off\">\n              <mat-placeholder>\n                <mat-icon>lock</mat-icon> New password\n              </mat-placeholder>\n            </mat-form-field>\n            <mat-form-field fxFlex=\"45\">\n              <input matInput type=\"password\" formControlName=\"password2\" \n                    class=\"form-control\"  autocomplete=\"off\">\n              <mat-placeholder>\n                <mat-icon>lock_outline</mat-icon> Password confirmation\n              </mat-placeholder>\n            </mat-form-field>\n  \n          </div>\n  \n  \n          <div fxLayout=\"row\" fxLayoutAlign=\"end end\" >\n              <button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!formRegister.valid\">\n                <mat-icon>done</mat-icon>&nbsp;Register\n              </button>\n          </div>\n  \n  \n  \n          </mat-card-content>\n      </mat-card>\n      </form>\n  \n  \n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import { AuthService } from './../../auth/services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/auth/models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent {\n\n  title = 'shop-app';\n\n  user$: Observable<User>;\n  authenticated$: Observable<boolean>;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router){\n    this.user$ = this.authService.getUser();\n    this.authenticated$ = this.authService.authenticated();\n  }\n\n  logout() {\n    this.authService.logout();\n    this.router.navigateByUrl('/auth/login');\n  }\n\n}\n","<mat-toolbar *ngIf=\"(authenticated$ | async) && (user$ | async)\" color=\"primary\">\n  <button mat-icon-button routerLink=\"/main/home\">\n    <mat-icon>home</mat-icon>\n  </button>\n\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n    <mat-icon>menu</mat-icon>\n  </button>\n  Shopping\n\n \n  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item routerLink=\"/main/home\">\n      <mat-icon>home</mat-icon>\n      <span>Home</span>\n    </button>\n    <button mat-menu-item routerLink=\"/main/pessoas\">\n      <mat-icon>person</mat-icon>\n      <span>Pessoas</span>\n    </button>\n    <!-- <button mat-menu-item>\n      <mat-icon>voicemail</mat-icon>\n      <span>Check voice mail</span>\n    </button>\n    <button mat-menu-item>\n      <mat-icon>notifications_off</mat-icon>\n      <span>Disable alerts</span>\n    </button> -->\n  </mat-menu>\n\n  <span fxFlex></span>\n\n  <button mat-icon-button (click)=\"logout()\">\n    <mat-icon>exit_to_app</mat-icon>\n  </button>\n\n  <button mat-icon-button [matMenuTriggerFor]=\"profileMenu\">\n    <mat-icon>account_circle</mat-icon>\n  </button>\n\n  <mat-menu\n    xPosition=\"before\"\n    [overlapTrigger]=\"false\"\n    #profileMenu=\"matMenu\"\n    class=\"before\"\n  >\n    <p class=\"username\">{{ (user$ | async)?.email }}</p>\n    <mat-divider></mat-divider>\n\n    <button mat-menu-item>\n      <mat-icon>exit_to_app</mat-icon>\n      Exit\n    </button>\n  </mat-menu>\n</mat-toolbar>\n\n<mat-toolbar *ngIf=\"!(authenticated$ | async)\" color=\"primary\">\n  Shopping\n  <span fxFlex></span>\n  <button mat-button routerLink=\"/auth/login\">\n    <mat-icon>input</mat-icon>&nbsp;Sign In\n  </button>\n  <button mat-button routerLink=\"/auth/register\">\n    <mat-icon>person_add</mat-icon>&nbsp;Sign Up\n  </button>\n</mat-toolbar>\n","import { NgModule } from '@angular/core';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\n\r\n\r\n@NgModule({\r\n  imports: [],\r\n  exports: [\r\n    FlexLayoutModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n  ],\r\n  declarations: []\r\n})\r\nexport class MaterialModule { }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig : {\n    apiKey: \"AIzaSyCkw27xpi78VP6achqGSZ-aJIdfH5F0IUc\",\n    authDomain: \"shopping-d1e02.firebaseapp.com\",\n    databaseURL: \"https://shopping-d1e02.firebaseio.com\",\n    projectId: \"shopping-d1e02\",\n    storageBucket: \"shopping-d1e02.appspot.com\",\n    messagingSenderId: \"488608174775\",\n    appId: \"1:488608174775:web:746e58e9af473db529b332\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}